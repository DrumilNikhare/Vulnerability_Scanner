import nmap
import socket
import requests
from bs4 import BeautifulSoup

def port_scan(target):
    nm = nmap.PortScanner()
    nm.scan(target, '1-1024')
    open_ports = []
    for host in nm.all_hosts():
        for proto in nm[host].all_protocols():
            ports = nm[host][proto].keys()
            for port in ports:
                if nm[host][proto][port]['state'] == 'open':
                    open_ports.append(port)
    return open_ports

def vulnerability_assessment(open_ports):
    vulnerabilities = []
    common_vulnerabilities = {
        21: "FTP - Anonymous login",
        22: "SSH - Weak password",
        80: "HTTP - SQL Injection",
        443: "HTTPS - SSL/TLS vulnerabilities",
    }
    for port in open_ports:
        if port in common_vulnerabilities:
            vulnerabilities.append(common_vulnerabilities[port])
    return vulnerabilities

def http_vulnerability_scan(target_url):
    vulnerabilities = []
    try:
        response = requests.get(target_url)
        if 'X-Content-Type-Options' not in response.headers:
            vulnerabilities.append("Missing X-Content-Type-Options header")
        if 'X-Frame-Options' not in response.headers:
            vulnerabilities.append("Missing X-Frame-Options header")
    except requests.RequestException as e:
        print(f"Error scanning {target_url}: {e}")
    return vulnerabilities

def generate_report(open_ports, vulnerabilities, http_vulnerabilities):
    report = "Vulnerability Scan Report\n"
    report += "="*30 + "\n"
    report += f"Open Ports: {open_ports}\n\n"
    report += "Potential Vulnerabilities:\n"
    for vuln in vulnerabilities:
        report += f"- {vuln}\n"
    report += "\nHTTP Vulnerabilities:\n"
    for http_vuln in http_vulnerabilities:
        report += f"- {http_vuln}\n"
    return report

target_ip = input("Enter target IP address: ")
open_ports = port_scan(target_ip)
vulnerabilities = vulnerability_assessment(open_ports)

target_url = input("Enter target URL: ")
http_vulnerabilities = http_vulnerability_scan(target_url)

report = generate_report(open_ports, vulnerabilities, http_vulnerabilities)
print(report)
